@using static TechStoreApp.Common.GeneralConstraints
@using TechStoreApp.Web.ViewModels.Products
@using TechStoreApp.Web.ViewModels.Search
@model SearchViewModel

<link rel="stylesheet" href="~/css/search-page.css"/>

<div class="whole-SearchPage-body">
    <div class="filters-wrap-div">

        <form id="search-in-category-form" asp-action="Search" asp-controller="Search" method="get">
            <input type="hidden" asp-for="@Model.Category" value="@Model.Category"/>
            <input type="text"  asp-for="@Model.Query" placeholder="Search in category..."/>

            <button type="submit">
                <img src="~/images/magnifying-glass-icon-12-black.png" />
            </button>
        </form>

        <div id="category-filter-div">
            <form id="filter-by-category" asp-action="Search" asp-controller="Search" method="get">
                <input type="hidden" asp-for="@Model.Query" value="@Model.Query" />
                <input type="hidden" asp-for="@Model.Orderby" value="@Model.Orderby" />
                <ul>
                    <li><button type="submit" name="Category" value="All">All products</button></li>
                    <li><button type="submit" name="Category" value="Prebuilt Configuration">Configured Systems</button></li>
                    <li><button type="submit" name="Category" value="Graphics Card">Graphics Cards</button></li>
                    <li><button type="submit" name="Category" value="Processor">Processors</button></li>
                    <li><button type="submit" name="Category" value="Processor Cooler">CPU Coolers</button></li>
                    <li><button type="submit" name="Category" value="PC Case">PC Cases</button></li>
                    <li><button type="submit" name="Category" value="Motherboard">Motherboards</button></li>
                    <li><button type="submit" name="Category" value="RAM">RAM sticks</button></li>
                    <li><button type="submit" name="Category" value="SSD">Solid state drives (SSDs)</button></li>
                    <li><button type="submit" name="Category" value="HDD">Hard disk drives (HDDs)</button></li>
                    <li><button type="submit" name="Category" value="Powersupply">Power Supplies</button></li>
                </ul>
            </form>
        </div>
    </div>

    <div class="products-wrap-div">
        <div class="quick-filters">
            @if (Model.Query != null)
            {
                <p style="display: block">Results for: "@Model.Query"</p>
            }

            <div class="dropdown">
                <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                    Sort by
                </button>

                <ul class="dropdown-menu">
                    @foreach (var option in Model.SortOptions)
                    {
                        if (Model.Orderby == option.OrderBy)
                        {
                            <li style ="background-color: gray">
                                <a 
                                   href="@Url.Action("Search", new { currentPage = 1,
                                       query = Model.Query,
                                       category = Model.Category,
                                       orderBy = option.OrderBy })">
                                    @option.Text
                                </a>
                            </li>
                        }
                        else
                        {
                            <li style="background-color: transparent">
                                <a 
                                    href="@Url.Action("Search", new { currentPage = 1,
                                        query = Model.Query,
                                        category = Model.Category,
                                        orderBy = option.OrderBy })">
                                    @option.Text
                                </a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>

        <div class="pages-container-selector">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (Model.CurrentPage == i)
                {
                    <a class="page-selector" id="page-@i" style="background-color: gray" onclick="return false;"
                       href="@Url.Action("Search", new SearchViewModel { CurrentPage = i,
                           Query = Model.Query,
                           Category = Model.Category,
                           Orderby = Model.Orderby })">@i</a>
                }
                else
                {
                    <a class="page-selector" id="page-@i"
                       href="@Url.Action("Search", new SearchViewModel { CurrentPage = i,
                           Query = Model.Query,
                           Category = Model.Category,
                           Orderby = Model.Orderby })">@i</a>
                }
            }
        </div>

        <div class="products-div">
            @{
                if (User.IsInRole(AdminRoleName))
                {
                    <div class="single-product-cell d-flex justify-content-center align-items-center">
                        <form class="" asp-controller="Product" asp-action="Add" asp-area="Admin" method="get">
                            <button class="add-to-cart-button" type="submit">
                                Add new item
                            </button>
                        </form>
                    </div>
                }

                if (Model.Products.Any())
                {
                    foreach (var item in @Model.Products)
                    {
                        <div class="single-product-cell">
                            <a class="image-link" href="@Url.Action("RedirectToDetails", "Product", new ProductIdFormModel { ProductId = item.ProductId })">
                                <img class="image-for-product" src="@item.ImageUrl" data-stock="@item.Stock" onerror="invalidProductPhoto(this)" />
                            </a>

                            <div class="product-details">
                                <p class="product-details-name">@item.Name</p>
                                <p class="procuct-details-stock text-muted">Stock: @item.Stock</p>
                                <p class="procuct-details-price text-muted">Price: $@item.Price</p>
                            </div>

                            <div class="mt-auto">
                                @{
                                    await Html.RenderPartialAsync("_AddToCartPartial", new { productId = item.ProductId });

                                    await Html.RenderPartialAsync("_LikesProductPartial", new { productId = item.ProductId, checkedString = item.CheckedString, totalLikes = item.TotalLikes });
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No products found.</p>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/search-page.js"></script>
    <script>
        function getModel() {
            return @Html.Raw(Json.Serialize(Model));
        }
    </script>
}